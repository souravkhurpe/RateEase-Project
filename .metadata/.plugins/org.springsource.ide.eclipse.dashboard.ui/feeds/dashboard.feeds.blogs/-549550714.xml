<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Spring]]></title><description><![CDATA[Level up your Java code and explore what Spring can do for you.]]></description><link>https://spring.io</link><generator>GatsbyJS</generator><lastBuildDate>Wed, 08 Oct 2025 00:35:24 GMT</lastBuildDate><item><title><![CDATA[Introducing Jackson 3 support in Spring]]></title><link>https://spring.io/blog/2025/10/07/introducing-jackson-3-support-in-spring</link><guid isPermaLink="true">https://spring.io/blog/2025/10/07/introducing-jackson-3-support-in-spring</guid><dc:creator><![CDATA[sdeleuze]]></dc:creator><pubDate>Tue, 07 Oct 2025 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;This is a new blog post in the &lt;a href=&quot;https://spring.io/blog/2025/09/02/road_to_ga_introduction&quot;&gt;Road to GA series&lt;/a&gt;, this time sharing more details on the new Jackson 3 support, just a few days after &lt;a href=&quot;https://github.com/FasterXML/jackson/wiki/Jackson-Release-3.0&quot;&gt;Jackson 3.0.0 GA release&lt;/a&gt;, about to be introduced in Spring Boot 4 and related Spring portfolio projects.&lt;/p&gt;
&lt;p&gt;Jackson is by far the most used JSON library on the JVM, and the introduction of the Jackson 3 support in Spring is the opportunity for us to provide additional enhancements, as a follow-up of the popular &lt;a href=&quot;https://spring.io/blog/2014/12/02/latest-jackson-integration-improvements-in-spring&quot;&gt;Jackson integration improvements in Spring&lt;/a&gt; that I announced more than 10 years ago!&lt;/p&gt;
&lt;h2 id=&quot;close-collaboration-between-spring-and-jackson-teams&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#close-collaboration-between-spring-and-jackson-teams&quot; aria-label=&quot;close collaboration between spring and jackson teams permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Close collaboration between Spring and Jackson teams&lt;/h2&gt;
&lt;p&gt;When the Spring team works on leveraging new versions of popular open source libraries, while it may not be obvious, a significant part of the work is sometimes collaborating with the maintainers on refinements that will benefit the wider community.&lt;/p&gt;
&lt;p&gt;Jackson 3 is a great illustration of that and I would like to thank Tatu Saloranta (the Jackson project lead) for his willingness to take our feedback into account during the release candidate phase - which has allowed the following refinements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/FasterXML/jackson-future-ideas/discussions/90&quot;&gt;Allow using Jackson 2 and Jackson 3 side by side&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/FasterXML/jackson-future-ideas/discussions/73#discussioncomment-11434464&quot;&gt;JDK 17 baseline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/FasterXML/jackson-databind/issues/1484&quot;&gt;Align Jackson and Spring defaults about JSON views&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/FasterXML/jackson-databind/issues/5111&quot;&gt;Non-blocking parser enhancements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/FasterXML/jackson-databind/issues/5283&quot;&gt;Refine the null-safety handling in the JsonNode API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/FasterXML/jackson-future-ideas/discussions/92#discussioncomment-14073094&quot;&gt;Revert an unpopular change on &lt;code&gt;JsonWriteFeature.ESCAPE_FORWARD_SLASHES&lt;/code&gt; default value&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/FasterXML/jackson-databind/issues/5246&quot;&gt;Fix an increased need for &lt;code&gt;@JsonCreator&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/FasterXML/jackson/blob/main/jackson3/MIGRATING_TO_JACKSON_3.md&quot;&gt;Jackson 3 migration guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;status-of-the-jackson-support-as-of-spring-boot-4&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#status-of-the-jackson-support-as-of-spring-boot-4&quot; aria-label=&quot;status of the jackson support as of spring boot 4 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Status of the Jackson support as of Spring Boot 4&lt;/h2&gt;
&lt;p&gt;The general principle is that, as of Spring Boot 4 and Spring Framework 7, the Spring portfolio is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Introducing Jackson 3 support&lt;/li&gt;
&lt;li&gt;Deprecating the Jackson 2 support for eventual removal&lt;/li&gt;
&lt;li&gt;Switching the default Jackson version enabled (classpath detection) to Jackson 3&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Main exception to this is Spring AI which intends to introduce Jackson 3 support in its 2.0 release in the first half of 2026.&lt;/p&gt;
&lt;p&gt;More specifically, Spring Boot 4 is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Providing dependency management for both Jackson 2 and 3&lt;/li&gt;
&lt;li&gt;Performing auto-configuration only for Jackson 3&lt;/li&gt;
&lt;li&gt;Using Jackson 3 in its &lt;code&gt;spring-boot-starter-json&lt;/code&gt; and &lt;code&gt;spring-boot-starter-jackson&lt;/code&gt; starter dependencies&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Applications migrating to Spring Boot 4 are encouraged to migrate to Jackson 3, even if it’s still possible to use Jackson 2 with Spring Boot 4 (see related section below). Transitive dependencies still depending on Jackson 2 remain supported and will benefit from the Jackson 2 dependency management.&lt;/p&gt;
&lt;h2 id=&quot;migrating-to-jackson-3&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#migrating-to-jackson-3&quot; aria-label=&quot;migrating to jackson 3 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Migrating to Jackson 3&lt;/h2&gt;
&lt;p&gt;This section focuses on the most important migration steps for typical Spring Boot applications, see &lt;a href=&quot;https://github.com/FasterXML/jackson/blob/main/jackson3/MIGRATING_TO_JACKSON_3.md&quot;&gt;the Jackson 3 migration guide&lt;/a&gt; for more details on other aspects. Related &lt;a href=&quot;https://docs.openrewrite.org/recipes/java/jackson/upgradejackson_2_3&quot;&gt;Open Rewrite recipes&lt;/a&gt; can help to automate some of those changes, and &lt;a href=&quot;https://enterprise.spring.io/spring-application-advisor&quot;&gt;Spring Application Advisor&lt;/a&gt; will provide the most comprehensive option for migrating your Spring Boot application incrementally.&lt;/p&gt;
&lt;h3 id=&quot;update-packages&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#update-packages&quot; aria-label=&quot;update packages permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Update packages&lt;/h3&gt;
&lt;p&gt;The first breaking change you will encounter when upgrading is probably the Jackson package (and dependency groupID) change from com.fasterxml.jackson to tools.jackson &lt;strong&gt;except for jackson-annotations which remains unchanged for backward-compatibility reasons&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&quot;adapt-to-the-new-default-settings&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#adapt-to-the-new-default-settings&quot; aria-label=&quot;adapt to the new default settings permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adapt to the new default settings&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/FasterXML/jackson-future-ideas/wiki/JSTEP-2&quot;&gt;Jackson 3 has changed some default settings&lt;/a&gt; compared to Jackson 2, so you should either adapt your tests accordingly (recommended when you can), or customize Jackson 3 configuration to restore some of the previous defaults.&lt;/p&gt;
&lt;p&gt;The changes most likely to break you tests are the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you are comparing Jackson serialization with raw strings in your tests, you will likely be impacted by &lt;code&gt;MapperFeature.SORT_PROPERTIES_ALPHABETICALLY&lt;/code&gt; now set to true.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SerializationFeature.WRITE_DATES_AS_TIMESTAMPS&lt;/code&gt; now known as &lt;code&gt;DateTimeFeature.WRITE_DATES_AS_TIMESTAMPS&lt;/code&gt; has been changed to false to serialize dates as ISO-8601 strings.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you prefer at least initially keep using default settings as close as possible as Jackson 2, you can use:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;@Bean
JsonMapperBuilderCustomizer jacksonCustomizer() {
    return builder -&gt; builder.configureForJackson2();
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;jackson-modules&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#jackson-modules&quot; aria-label=&quot;jackson modules permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Jackson modules&lt;/h3&gt;
&lt;p&gt;Some former Jackson 2 modules are now built in Jackson 3, like the parameter-names or datatype-jsr310 ones. Other modules previously enabled via the &lt;code&gt;Jackson2ObjectMapperBuilder&lt;/code&gt; are &lt;a href=&quot;https://javadoc.io/static/tools.jackson.core/jackson-databind/3.0.0/tools.jackson.databind/tools/jackson/databind/cfg/MapperBuilder.html#findAndAddModules(java.lang.ClassLoader)&quot;&gt;now discovered automatically via the JDK service loader facility&lt;/a&gt; for the converters and codecs provided with Spring Framework.&lt;/p&gt;
&lt;p&gt;It is also of course possible to configure custom ones via &lt;code&gt;JsonMapper.Builder&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;from-objectmapper-to-jsonmapper&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#from-objectmapper-to-jsonmapper&quot; aria-label=&quot;from objectmapper to jsonmapper permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;From &lt;code&gt;ObjectMapper&lt;/code&gt; to &lt;code&gt;JsonMapper&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Jackson 3 introduces &lt;a href=&quot;https://github.com/FasterXML/jackson/wiki/Jackson-Release-3.0&quot;&gt;a lot of changes and enhancements&lt;/a&gt;, but from a Spring perspective one of the most important ones to understand and embrace is the &lt;strong&gt;switch from a mutable &lt;code&gt;ObjectMapper&lt;/code&gt; in Jackson 2 to an immutable &lt;a href=&quot;https://javadoc.io/static/tools.jackson.core/jackson-databind/3.0.0/tools.jackson.databind/tools/jackson/databind/json/JsonMapper.html&quot;&gt;&lt;code&gt;JsonMapper&lt;/code&gt;&lt;/a&gt; in Jackson 3&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;JsonMapper&lt;/code&gt;, which extends &lt;code&gt;ObjectMapper&lt;/code&gt;, is specific to the JSON format, following a similar pattern than other formats (&lt;code&gt;XmlMapper&lt;/code&gt;, &lt;code&gt;YAMLMapper&lt;/code&gt;, &lt;code&gt;SmileMapper&lt;/code&gt;, etc.) and Spring support has been updated to use this format specific variant, following Jackson 3 best practices.&lt;/p&gt;
&lt;p&gt;Also with Jackson and Spring defaults mostly aligned, and the introduction of a first class &lt;a href=&quot;https://javadoc.io/static/tools.jackson.core/jackson-databind/3.0.0/tools.jackson.databind/tools/jackson/databind/json/JsonMapper.Builder.html&quot;&gt;&lt;code&gt;JsonMapper.Builder&lt;/code&gt;&lt;/a&gt;, &lt;strong&gt;Spring Framework does not provide an equivalent for &lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/http/converter/json/Jackson2ObjectMapperBuilder.html&quot;&gt;&lt;code&gt;Jackson2ObjectMapperBuilder&lt;/code&gt;&lt;/a&gt;, you should just use the Jackson builder&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;For example, with Spring Boot 3 and its Jackson 2 support, the programmatic equivalent of &lt;code&gt;spring.jackson.serialization.indent-output=true&lt;/code&gt; was:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;@Bean
public Jackson2ObjectMapperBuilderCustomizer jacksonCustomizer() {
    return builder -&gt; builder.indentOutput(true);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With Spring Boot 4 and its Jackson 3 support, it is:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;@Bean
JsonMapperBuilderCustomizer jacksonCustomizer() {
    return builder -&gt; builder.enable(SerializationFeature.INDENT_OUTPUT);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;goodbye-mappingjacksonvalue&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#goodbye-mappingjacksonvalue&quot; aria-label=&quot;goodbye mappingjacksonvalue permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Goodbye &lt;code&gt;MappingJacksonValue&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;The now deprecated &lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.html&quot;&gt;&lt;code&gt;MappingJackson2HttpMessageConverter&lt;/code&gt;&lt;/a&gt; was extending &lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/http/converter/GenericHttpMessageConverter.html&quot;&gt;&lt;code&gt;GenericHttpMessageConverter&lt;/code&gt;&lt;/a&gt; which does not allow to pass properly additional serialization information like the serialization view or &lt;code&gt;FilterProvider&lt;/code&gt;, hence the need for a &lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/http/converter/json/MappingJacksonValue.html&quot;&gt;&lt;code&gt;MappingJacksonValue&lt;/code&gt;&lt;/a&gt; wrapper.&lt;/p&gt;
&lt;p&gt;For example, let say we are annotating a &lt;code&gt;User&lt;/code&gt; record with &lt;code&gt;@JsonView(Summary.class)&lt;/code&gt; to identify a subset of its components to serialize or deserialize:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;public record User(
    @JsonView(Summary.class) String firstname,
    @JsonView(Summary.class) String lastname,
    LocalDate birthdate,
    @JsonView(Summary.class) String email,
    String address,
    int postalCode,
    String city,
    String country) {
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With Spring Framework 6 and before, on client side you had to use a &lt;code&gt;MappingJacksonValue&lt;/code&gt; wrapper to specify the &lt;code&gt;Summary&lt;/code&gt; JSON view should be used.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;var user = new User(&quot;Marcel&quot;, &quot;Martin&quot;, LocalDate.of(1971, 7, 12),
    &quot;m@m.fr&quot;, &quot;1234 rue Gambetta&quot;, 69002, &quot;Lyon&quot;, &quot;France&quot;);
var jacksonValue = new MappingJacksonValue(user);
jacksonValue.setSerializationView(Summary.class);
var response = this.restTemplate.postForObject(&quot;http://localhost:8080/create&quot;, jacksonValue, String.class);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This allows to serialize only the record components annotated with &lt;code&gt;@JsonView(Summary.class)&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  &quot;firstname&quot; : &quot;Marcel&quot;,
  &quot;lastname&quot; : &quot;Martin&quot;,
  &quot;email&quot; : &quot;m@m.fr&quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As of Spring Framework 7, you can leverage the fact that the new &lt;a href=&quot;https://docs.spring.io/spring-framework/docs/7.0.x/javadoc-api/org/springframework/http/converter/json/JacksonJsonHttpMessageConverter.html&quot;&gt;&lt;code&gt;JacksonJsonHttpMessageConverter&lt;/code&gt;&lt;/a&gt; based on Jackson 3 is implementing &lt;a href=&quot;https://docs.spring.io/spring-framework/docs/7.0.x/javadoc-api/org/springframework/http/converter/SmartHttpMessageConverter.html&quot;&gt;&lt;code&gt;SmartHttpMessageConverter&lt;/code&gt;&lt;/a&gt; which supports serialization hints, so you can write instead:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;var user = new User(&quot;Marcel&quot;, &quot;Martin&quot;, LocalDate.of(1971, 7, 12),
    &quot;m@m.fr&quot;, &quot;1234 rue Gambetta&quot;, 69002, &quot;Lyon&quot;, &quot;France&quot;);
var response = this.restClient.post().uri(&quot;http://localhost:8080/create&quot;)
    .hint(JsonView.class.getName(), Summary.class).body(user)
    .retrieve().body(String.class);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;No more mutable wrapper, just optional hints.&lt;/p&gt;
&lt;h3 id=&quot;keep-using-jackson-2-support-temporarily&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#keep-using-jackson-2-support-temporarily&quot; aria-label=&quot;keep using jackson 2 support temporarily permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keep using Jackson 2 support temporarily&lt;/h3&gt;
&lt;p&gt;Applications migrating to Spring Boot 4 are encouraged to migrate to Jackson 3 but can continue to use Jackson 2 or even use Jackson 2 and 3 at the same time if needed. Just be aware it may require adding Jackson 2 dependencies and some manual configuration.&lt;/p&gt;
&lt;p&gt;With Spring Boot 4 and Spring MVC, if you exclude Jackson 3 dependencies and add Jackson 2 ones, the Jackson 2 support will be used by default as it will be detected by &lt;code&gt;WebMvcConfigurationSupport&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you have both Jackson 2 and Jackson 3 in the classpath, Spring Framework introduces a new &lt;a href=&quot;https://docs.spring.io/spring-framework/docs/7.0.x/javadoc-api/org/springframework/http/converter/HttpMessageConverters.html&quot;&gt;&lt;code&gt;org.springframework.http.converter.HttpMessageConverters&lt;/code&gt;&lt;/a&gt; type and a related Spring Boot 4 customizer which allows to force using Jackson 2 pretty easily:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;@Bean
@SuppressWarnings(&quot;removal&quot;)
public ServerHttpMessageConvertersCustomizer jackson2ServerConvertersCustomizer() {
    return builder -&gt; builder.jsonMessageConverter(new MappingJackson2HttpMessageConverter());
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;spring-security-jackson-3-support&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#spring-security-jackson-3-support&quot; aria-label=&quot;spring security jackson 3 support permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spring Security Jackson 3 support&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/spring-projects/spring-security/pull/17832&quot;&gt;related pull-request&lt;/a&gt; is not yet merged and still subject to refinements, but it is worth to notice that in addition to introducing Jackson 3 support and deprecating Jackson 2 one, Spring Security 7.0 is going to make its Jackson 3 support safer by disabling default global typing (see &lt;a href=&quot;https://cowtowncoder.medium.com/jackson-2-10-safe-default-typing-2d018f0ce2ba&quot;&gt;this blog post&lt;/a&gt; for more background).&lt;/p&gt;
&lt;p&gt;Instead, it leverages a &lt;a href=&quot;https://javadoc.io/doc/tools.jackson.core/jackson-databind/latest/tools.jackson.databind/tools/jackson/databind/jsontype/PolymorphicTypeValidator.html&quot;&gt;PolymorphicTypeValidator&lt;/a&gt; where only Spring Security types are allowed by default, and provide the capability for applications to add their own types, for example:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;ClassLoader loader = getClass().getClassLoader();
BasicPolymorphicTypeValidator.Builder typeValidatorBuilder = BasicPolymorphicTypeValidator.builder()
    .allowIfSubType(CustomGrantedAuthority.class);
JsonMapper mapper = JsonMapper.builder()
    .addModules(SecurityJacksonModules.getModules(loader, typeValidatorBuilder))
    .build();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Due to the Jackson 3 changes and the disabling of global default typing, Jackson 2 and Jackson 3 serialized data format will be different, but in in order to ease the migration of applications storing Jackson 2 in databases for example, a Jackson 2 compatibility mode is going to be provided in order to allow migrating to Spring Boot 4 and Spring Security 7, while still using the very same Jackson 2 data format with Jackson 3.&lt;/p&gt;
&lt;h2 id=&quot;spring-data-jackson-3-support&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#spring-data-jackson-3-support&quot; aria-label=&quot;spring data jackson 3 support permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spring Data Jackson 3 support&lt;/h2&gt;
&lt;p&gt;Spring Data 4.0 ships with full support for Jackson 3 for its core modules. Applications migrating to Spring Data 4 are encouraged to migrate to Jackson 3 but can continue to use Jackson 2 or even use Jackson 2 and 3 at the same time if needed. Just be aware that Jackson 3 ships with a different set of defaults that may require either a migration of your persistent data or updating Jackson 3 defaults to match Jackson 2 settings.&lt;/p&gt;
&lt;p&gt;As Spring Data forms a larger set of projects, let&apos;s explore each module separately:&lt;/p&gt;
&lt;h3 id=&quot;spring-data-commons&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#spring-data-commons&quot; aria-label=&quot;spring data commons permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spring Data Commons&lt;/h3&gt;
&lt;p&gt;Spring Data Commons adding support for Jackson 3 with a fallback to Jackson 2 if only Jackson 2 is on the classpath. This applies mostly to Web support through &lt;code&gt;ProjectingJacksonHttpMessageConverter&lt;/code&gt; and &lt;code&gt;SpringDataWebConfiguration&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;JacksonResourceReader&lt;/code&gt; and &lt;code&gt;JacksonRepositoryPopulatorFactoryBean&lt;/code&gt; are Jackson 3-based variants of &lt;code&gt;Jackson2ResourceReader&lt;/code&gt; respective &lt;code&gt;Jackson2RepositoryPopulatorFactoryBean&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you’re using Jackson 2 together with Spring Data’s XML namespace support (&lt;code&gt;&amp;#x3C;repository:jackson2-populator …&gt;&lt;/code&gt;) and you want to migrate to Jackson 3, then you will have to define a &lt;code&gt;JacksonRepositoryPopulatorFactoryBean&lt;/code&gt; bean in your Java configuration.&lt;/p&gt;
&lt;p&gt;If you happen to use &lt;code&gt;SpringDataJacksonModules&lt;/code&gt;, then you want to consider migrating towards &lt;code&gt;SpringDataJackson3Modules&lt;/code&gt; for a Jackson 3-based arrangement of your modules.&lt;/p&gt;
&lt;h3 id=&quot;spring-data-redis&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#spring-data-redis&quot; aria-label=&quot;spring data redis permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spring Data Redis&lt;/h3&gt;
&lt;p&gt;Spring Data Redis 4.0 ships with &lt;code&gt;JacksonHashMapper&lt;/code&gt;, &lt;code&gt;JacksonJsonRedisSerializer&lt;/code&gt;, and &lt;code&gt;GenericJacksonJsonRedisSerializer&lt;/code&gt; implementations for Jackson 3. When using &lt;code&gt;JacksonObjectReader&lt;/code&gt; and JacksonObjectWriter, make sure to retrofit your implementations using &lt;code&gt;Jackson2ObjectReader&lt;/code&gt; respective &lt;code&gt;Jackson2ObjectWriter&lt;/code&gt; as class naming has been aligned for a consistent scheme.&lt;/p&gt;
&lt;h3 id=&quot;spring-data-rest&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#spring-data-rest&quot; aria-label=&quot;spring data rest permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spring Data REST&lt;/h3&gt;
&lt;p&gt;Spring Data REST is essentially a large wrapper around Jackson that doesn&apos;t support an operating mode using Jackson 2. If you want to use the new Spring Data REST version then your application must migrate to Jackson 3. Similar goes for Spring HATEOAS as both frameworks make heavy usage of Jackson.&lt;/p&gt;
&lt;h3 id=&quot;spring-data-couchbase-elasticsearch-drivers&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#spring-data-couchbase-elasticsearch-drivers&quot; aria-label=&quot;spring data couchbase elasticsearch drivers permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spring Data Couchbase, Elasticsearch, Drivers&lt;/h3&gt;
&lt;p&gt;The larger ecosystem is slowly catching up with Jackson 3. Couchbase, Elasticsearch, and some drivers use Jackson 2 internally and will continue doing so. In most cases, Jackson usage within these components doesn&apos;t relate to your entities as it is their mechanism for a JSON parser and writer.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#conclusion&quot; aria-label=&quot;conclusion permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Jackson 3 brings strong benefits in terms of security, API, default configuration and capabilities, but it also comes with breaking changes that will require some migration work, the Spring team fully realizes that and has put significant efforts in providing the best possible arrangement and related guidance as well as offering industry leading extended support on the previous version to give you the time to upgrade.&lt;/p&gt;
&lt;p&gt;As usual, we are looking for feedback and will do our best to refine our guidance, documentation and answer to your related questions.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Introducing the Spring AI Community GitHub Organization]]></title><link>https://spring.io/blog/2025/10/07/spring-ai-community-announcement</link><guid isPermaLink="true">https://spring.io/blog/2025/10/07/spring-ai-community-announcement</guid><dc:creator><![CDATA[markpollack]]></dc:creator><pubDate>Tue, 07 Oct 2025 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;The &lt;a href=&quot;https://github.com/spring-ai-community&quot;&gt;Spring AI Community GitHub organization&lt;/a&gt; was announced at the &lt;a href=&quot;https://youtu.be/oUK1Np4OvnM?si=st_k2WJa8dSQmQAY&amp;#x26;t=3299&quot;&gt;Spring I/O Barcelona 2025 keynote&lt;/a&gt; as a dedicated space for community-driven Spring AI projects and innovations.  However, I never blogged about it to get more awareness so now is the time.  Better late than never and now with a new web site!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Check out the Spring AI Community at &lt;a href=&quot;https://springaicommunity.mintlify.app&quot;&gt;springaicommunity.mintlify.app&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The Spring AI Community creates an easy path for developers to contribute Spring AI-related projects while providing a vital incubation space for new ideas. As the Spring AI project has grown, it has received numerous pull requests for additional features and integrations that, while valuable, the core team cannot easily maintain or nurture within the main repository. This independent community organization solves that challenge by establishing a known hub where community projects can thrive and be discovered.&lt;/p&gt;
&lt;h2 id=&quot;community-leadership&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#community-leadership&quot; aria-label=&quot;community leadership permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community Leadership&lt;/h2&gt;
&lt;p&gt;The Spring AI Community is guided by three prominent leaders who bring deep expertise in Spring technologies and community building:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/salmar&quot;&gt;Sergi Almar&lt;/a&gt;&lt;/strong&gt; - Spring community advocate and technology leader
&lt;strong&gt;&lt;a href=&quot;https://github.com/asaikali&quot;&gt;Adib Saikali&lt;/a&gt;&lt;/strong&gt; - Enterprise architecture expert and Spring educator
&lt;strong&gt;&lt;a href=&quot;https://github.com/ThomasVitale&quot;&gt;Thomas Vitale&lt;/a&gt;&lt;/strong&gt; - Cloud native Java specialist and author&lt;/p&gt;
&lt;p&gt;Together, they oversee a lightweight governance model that emphasizes project autonomy and rapid decision-making while maintaining alignment with Spring AI&apos;s core values.&lt;/p&gt;
&lt;h2 id=&quot;current-projects&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#current-projects&quot; aria-label=&quot;current projects permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Current Projects&lt;/h2&gt;
&lt;p&gt;The community has already has a nice collection of projects across two categories:&lt;/p&gt;
&lt;h3 id=&quot;production-projects&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#production-projects&quot; aria-label=&quot;production projects permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Production Projects&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/spring-ai-community/moonshot&quot;&gt;Moonshot&lt;/a&gt;&lt;/strong&gt; - Comprehensive Java client for Moonshot AI API with support for Chinese language models (moonshot-v1-8k/32k/128k), streaming responses, and function calling. Led by &lt;a href=&quot;https://github.com/mxsl-gr&quot;&gt;Geng&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/spring-ai-community/qianfan&quot;&gt;QianFan&lt;/a&gt;&lt;/strong&gt; - Integration with Baidu&apos;s QianFan AI platform offering chat models, embedding models, and image generation capabilities. Led by &lt;a href=&quot;https://github.com/mxsl-gr&quot;&gt;Geng&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;incubating-projects&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#incubating-projects&quot; aria-label=&quot;incubating projects permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Incubating Projects&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/spring-ai-community/spring-ai-agents&quot;&gt;Spring AI Agents&lt;/a&gt;&lt;/strong&gt; - Autonomous CLI agent integrations bringing Claude Code, Gemini, Amazon Q, Amp, and Codex to Spring applications with unified AgentClient API and Spring Boot auto-configuration. Led by &lt;a href=&quot;https://github.com/markpollack&quot;&gt;Mark Pollack&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/spring-ai-community/spring-ai-bench&quot;&gt;Spring AI Bench&lt;/a&gt;&lt;/strong&gt; - Open benchmarking suite for Java-centric AI developer agents, measuring real enterprise development tasks like issue triage, PR review, and test coverage uplift. The project achieved 71.4% test coverage autonomously on Spring&apos;s gs-rest-service tutorial. Led by &lt;a href=&quot;https://github.com/markpollack&quot;&gt;Mark Pollack&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/spring-ai-community/mcp-annotations&quot;&gt;MCP Annotations&lt;/a&gt;&lt;/strong&gt; - Annotation-based method handling for Model Context Protocol servers in Java, simplifying MCP server creation with declarative annotations for tools, resources, and prompts. Led by &lt;a href=&quot;https://github.com/tzolov&quot;&gt;Christian Tzolov&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/spring-ai-community/mcp-security&quot;&gt;MCP Security&lt;/a&gt;&lt;/strong&gt; - Security support for Model Context Protocol implementations providing authentication, authorization, and secure deployment patterns. Led by &lt;a href=&quot;https://github.com/Kehrlann&quot;&gt;Daniel Garnier-Moiroux&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/spring-ai-community/spring-ai-vaadin&quot;&gt;Spring AI Vaadin&lt;/a&gt;&lt;/strong&gt; - Rich Vaadin UI components for building AI-powered chat applications with RAG support and MCP integration. Led by &lt;a href=&quot;https://github.com/tomivirkki&quot;&gt;Tomi Virkki&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/spring-ai-community/spring-ai-playground&quot;&gt;Spring AI Playground&lt;/a&gt;&lt;/strong&gt; - Self-hosted web UI for AI experimentation and testing, enabling developers to explore Spring AI capabilities interactively. Led by &lt;a href=&quot;https://github.com/JM-Lab&quot;&gt;Jemin Huh&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/spring-ai-community/spring-agui&quot;&gt;Spring AG-UI&lt;/a&gt;&lt;/strong&gt; - AG-UI protocol implementation for Spring AI, enabling advanced agent-to-UI communication patterns. Led by &lt;a href=&quot;https://github.com/pascalwilbrink&quot;&gt;Pascal Wilbrink&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;lightweight-governance&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#lightweight-governance&quot; aria-label=&quot;lightweight governance permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lightweight Governance&lt;/h2&gt;
&lt;p&gt;The Spring AI Community follows a developer-friendly governance model that prioritizes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Project Autonomy&lt;/strong&gt; - Technical leads have full authority over their projects&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rapid Decision-Making&lt;/strong&gt; - Unanimous approval from community leads for new projects&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IP Ownership&lt;/strong&gt; - Contributors retain ownership of their intellectual property under Apache 2.0 license&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Open Communication&lt;/strong&gt; - GitHub Discussions for technical decisions, Issues for feature requests&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Projects are as autonomous as possible, with community leads serving as a resource for mediation and guidance when needed.&lt;/p&gt;
&lt;h2 id=&quot;get-involved&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#get-involved&quot; aria-label=&quot;get involved permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Get Involved&lt;/h2&gt;
&lt;p&gt;We welcome new projects and contributors to the Spring AI Community:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Propose a Project&lt;/strong&gt; - Have an idea for a Spring AI integration or tool? Submit a &lt;a href=&quot;https://github.com/spring-ai-community/community/issues/new?template=application.yml&quot;&gt;project proposal&lt;/a&gt; to get started.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Explore Projects&lt;/strong&gt; - Browse our growing catalog at &lt;a href=&quot;https://springaicommunity.mintlify.app&quot;&gt;springaicommunity.mintlify.app&lt;/a&gt; to discover integrations, tools, and examples.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Contribute&lt;/strong&gt; - Check out existing projects and contribute code, documentation, or feedback. Each project maintains its own contribution guidelines.&lt;/p&gt;
&lt;h2 id=&quot;resources&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#resources&quot; aria-label=&quot;resources permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://springaicommunity.mintlify.app&quot;&gt;Community Portal&lt;/a&gt; | &lt;a href=&quot;https://github.com/spring-ai-community&quot;&gt;GitHub Organization&lt;/a&gt; | &lt;a href=&quot;https://springaicommunity.mintlify.app/community/governance&quot;&gt;Governance Model&lt;/a&gt; | &lt;a href=&quot;https://springaicommunity.mintlify.app/community/project-guide&quot;&gt;Project Guide&lt;/a&gt; | &lt;a href=&quot;https://github.com/spring-ai-community/awesome-spring-ai&quot;&gt;Awesome Spring AI&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;-acknowledgments&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#-acknowledgments&quot; aria-label=&quot; acknowledgments permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;? Acknowledgments&lt;/h2&gt;
&lt;p&gt;Special thanks to our community leads and to all project leads who have already contributed their innovative work: &lt;a href=&quot;https://github.com/mxsl-gr&quot;&gt;Geng&lt;/a&gt;, &lt;a href=&quot;https://github.com/tzolov&quot;&gt;Christian Tzolov&lt;/a&gt;, &lt;a href=&quot;https://github.com/Kehrlann&quot;&gt;Daniel Garnier-Moiroux&lt;/a&gt;, &lt;a href=&quot;https://github.com/tomivirkki&quot;&gt;Tomi Virkki&lt;/a&gt;, &lt;a href=&quot;https://github.com/JM-Lab&quot;&gt;Jemin Huh&lt;/a&gt;, and &lt;a href=&quot;https://github.com/pascalwilbrink&quot;&gt;Pascal Wilbrink&lt;/a&gt;.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[This Week in Spring - October 7th, 2025]]></title><link>https://spring.io/blog/2025/10/07/this-week-in-spring-october-7th-2025</link><guid isPermaLink="true">https://spring.io/blog/2025/10/07/this-week-in-spring-october-7th-2025</guid><dc:creator><![CDATA[joshlong]]></dc:creator><pubDate>Tue, 07 Oct 2025 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Hi, Spring fans! How&apos;re you doing this fantastic October afternoon? I&apos;m on a train returning from Frankfurt, Germany, where I spoke at the Cloud Foundry Day Frankfurt event about how awesome it is to build an application with Spring Boot and Cloud Foundry. Yesterday I was in Antwerp, Belgium, and did two workshops, each of three hours duration. Now, I&apos;m on my way &lt;em&gt;back&lt;/em&gt; to Antwerp to return to Devoxx Belgium. I&apos;ll be doing a talk on Spring Boot 4; another joint talk with James Ward and the Spring AI leads Dr. Mark Pollack and Christian Tsolov; and a joint talk with GraalVM founder Thomas Weurthinger. It&apos;s going to be amazing! Then, Thursday, it&apos;s off to Amsterdam for the Amsterdan JUG, where I&apos;ll also be copresenting with James Ward. Join us!&lt;/p&gt;
&lt;p&gt;Let&apos;s dive into this week&apos;s roundup!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2025/09/30/spring-ai-mcp-server-security&quot;&gt;Securing MCP servers with Spring AI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2025/10/07/introducing-jackson-3-support-in-spring&quot;&gt;Introducing Jackson 3 support in Spring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2025/10/06/spring-ai-1-1-0-M3-available-now&quot;&gt;Spring AI 1.1.0-M3 is available now&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2025/10/03/spring-cloud-2025-1-0-M3-aka-oakwood-has-been-released&quot;&gt;Spring Cloud 2025.1.0-M3 is released&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;in last week&apos;s installment of &lt;em&gt;A Bootiful Podcast&lt;/em&gt;, &lt;a href=&quot;https://spring.io/blog/2025/10/02/a-bootiful-podcast-dr-kris-de-volder&quot;&gt;I talked to Dr. Kris de Volder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2025/10/01/spring-ai-1-0-3-available-now&quot;&gt;Spring AI 1.0.3 is available now&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I love this look at JSpecify and null safety in Spring Boot 4 by &lt;a href=&quot;https://michael-simons.eu/p/jspecify-and-nullaway-a-fresh-take-on-nullsafety-in-the-java-world.html&quot;&gt;friend-of-the-community Michael Simons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;a nice post on how to configure &lt;a href=&quot;https://www.baeldung.com/spring-ai-configure-multiple-llms&quot;&gt;multiple LLMs with Spring AI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Hurray! &lt;a href=&quot;https://x.com/fasterxml/status/1974231062805918044?s=12&amp;#x26;t=n-UflcIbnx1lage-TBk0Cg&quot;&gt;Jackson 3 - the JSON encoding library - is out (and supported in Spring Boot 4)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;have you been following those epic posts on API design by Spring team &lt;a href=&quot;https://poutsma-principles.com/blog/2025/09/25/parameter-names/&quot;&gt;alumnus and legend Arjen Poutsma&lt;/a&gt;?&lt;/li&gt;
&lt;li&gt;did you see that the &lt;a href=&quot;https://github.com/spring-ai-community/mcp-security&quot;&gt;MCP Security project is looking ever more polished&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Spring AI 1.1.0-M3 Available Now]]></title><link>https://spring.io/blog/2025/10/06/spring-ai-1-1-0-M3-available-now</link><guid isPermaLink="true">https://spring.io/blog/2025/10/06/spring-ai-1-1-0-M3-available-now</guid><dc:creator><![CDATA[markpollack]]></dc:creator><pubDate>Mon, 06 Oct 2025 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;On behalf of the Spring AI engineering team and everyone who has contributed, I&apos;m happy to announce that Spring AI &lt;code&gt;1.1.0-M3&lt;/code&gt; has been released and is now available from Maven Central.&lt;/p&gt;
&lt;p&gt;This milestone release focuses primarily on &lt;strong&gt;Model Context Protocol (MCP) enhancements&lt;/strong&gt;, incorporating the &lt;a href=&quot;https://github.com/modelcontextprotocol/java-sdk/releases/tag/v0.14.0&quot;&gt;MCP Java SDK v0.14.0&lt;/a&gt; upgrade along with new resource template capabilities and security documentation.&lt;/p&gt;
&lt;h2 id=&quot;release-summary&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#release-summary&quot; aria-label=&quot;release summary permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Release Summary&lt;/h2&gt;
&lt;p&gt;This release includes &lt;a href=&quot;https://github.com/spring-projects/spring-ai/releases/tag/v1.1.0-M3&quot;&gt;46 improvements, bug fixes, and documentation updates&lt;/a&gt;. Key focus areas include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Model Context Protocol&lt;/strong&gt;: Upgraded to MCP Java SDK 0.14.0 with resource template support and security best practices&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;New Features&lt;/strong&gt;: 7 capabilities including Azure Cosmos DB chat memory and GemFire metadata filtering&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stability&lt;/strong&gt;: 11 bug fixes addressing community-reported issues&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: 9 improvements including MCP security guidance&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dependency Upgrades&lt;/strong&gt;: 3 updates including security fixes (CVE-2025-54988)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;-model-context-protocol-improvements&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#-model-context-protocol-improvements&quot; aria-label=&quot; model context protocol improvements permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;? Model Context Protocol Improvements&lt;/h2&gt;
&lt;p&gt;This release brings &lt;strong&gt;enhanced MCP integration&lt;/strong&gt; to Spring AI, motivated by significant improvements in the MCP Java SDK v0.14.0:&lt;/p&gt;
&lt;h3 id=&quot;core-mcp-enhancements&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#core-mcp-enhancements&quot; aria-label=&quot;core mcp enhancements permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;Core MCP Enhancements&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Updated &lt;a href=&quot;https://modelcontextprotocol.io/sdk/java/mcp-overview&quot;&gt;MCP Java SDK&lt;/a&gt;&lt;/strong&gt;: Enhanced resource template management and API consistency&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://docs.spring.io/spring-ai/reference/1.1/api/mcp/mcp-security.html&quot;&gt;Security Documentation&lt;/a&gt;&lt;/strong&gt;: Added MCP security reference documentation for secure deployment configurations&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Resource Template Support&lt;/strong&gt;: Added parameterized resource template capabilities for both sync and async MCP servers, enabling flexible resource provisioning with dynamic parameters&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Client-Side Validation&lt;/strong&gt;: New tool output schema validation and caching capabilities for improved reliability&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Robust Error Handling&lt;/strong&gt;: Better resilience for MCP server interactions with proper handling of non-compliant notification responses and Content-Length: 0 scenarios&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Spec Compliance&lt;/strong&gt;: Proper resource not found handling according to MCP specification&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;API Refinements&lt;/strong&gt;: Improved JSON type handling, consistent naming conventions (MCP_SESSION_ID), and optional lastModified field support in Annotations&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For developers using MCP in Spring AI applications, this release provides a more stable and feature-rich foundation for tool integration workflows.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Special thanks to the &lt;a href=&quot;https://github.com/modelcontextprotocol/java-sdk/releases/tag/v0.14.0&quot;&gt;MCP Java SDK&lt;/a&gt; community&lt;/strong&gt; for their exceptional work on the underlying SDK improvements that made this Spring AI release possible:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Broadcom&lt;/strong&gt;: &lt;a href=&quot;https://github.com/tzolov&quot;&gt;Christian Tzolov (@tzolov)&lt;/a&gt;, &lt;a href=&quot;https://github.com/Kehrlann&quot;&gt;Daniel Garnier-Moiroux (@Kehrlann)&lt;/a&gt;, &lt;a href=&quot;https://github.com/chemicL&quot;&gt;Dariusz J?drzejczyk (@chemicL)&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Oracle&lt;/strong&gt;: &lt;a href=&quot;https://github.com/sdelamo&quot;&gt;Sergio del Amo (@sdelamo)&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Confluent&lt;/strong&gt;: &lt;a href=&quot;https://github.com/pascalconfluent&quot;&gt;Pascal Vantrepote (@pascalconfluent)&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Amazon Web Services&lt;/strong&gt;: &lt;a href=&quot;https://github.com/pantanurag555&quot;&gt;Anurag Pant (@pantanurag555)&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Open Source Community&lt;/strong&gt;: &lt;a href=&quot;https://github.com/JunJieLiu51520&quot;&gt;Liujunjie (@JunJieLiu51520)&lt;/a&gt; - First-time contributor to MCP Java SDK&lt;/p&gt;
&lt;h2 id=&quot;additional-functional-areas-enhanced&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#additional-functional-areas-enhanced&quot; aria-label=&quot;additional functional areas enhanced permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional Functional Areas Enhanced&lt;/h2&gt;
&lt;p&gt;Beyond MCP improvements, this release brings enhancements across major functional areas of Spring AI:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://docs.spring.io/spring-ai/reference/1.1/api/chat-memory.html&quot;&gt;Azure Cosmos DB Chat Memory&lt;/a&gt;&lt;/strong&gt; - Added Azure Cosmos DB integration for chat memory storage, expanding beyond existing Cassandra support&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://docs.spring.io/spring-ai/reference/1.1/api/chat/anthropic-chat.html#_prompt_caching&quot;&gt;Anthropic Prompt Caching&lt;/a&gt;&lt;/strong&gt; - Updated Anthropic integration with prompt caching strategies (system-only, system-and-tools, conversation-history) and support for the latest Claude models (Sonnet 4.5, Opus 4.1) with consistent naming conventions&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://docs.spring.io/spring-ai/reference/1.1/api/vectordbs/gemfire.html&quot;&gt;GemFire Vector Search&lt;/a&gt;&lt;/strong&gt; - Added metadata filtering for GemFireVectorStore enabling similarity search queries with filtering conditions for RAG applications&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://docs.spring.io/spring-ai/reference/1.1/api/etl-pipeline.html#_markdown&quot;&gt;MarkdownDocumentReader&lt;/a&gt;&lt;/strong&gt; - Now processes multiple documents in a single operation for batch document ingestion&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://docs.spring.io/spring-ai/reference/1.1/api/chat/mistralai-chat.html&quot;&gt;Mistral AI Improvements&lt;/a&gt;&lt;/strong&gt; - Builder pattern support across the Mistral module plus improved JsonSchemaGenerator handling for function calling parameters&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;looking-ahead-spring-ai-11-ga&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#looking-ahead-spring-ai-11-ga&quot; aria-label=&quot;looking ahead spring ai 11 ga permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Looking Ahead: Spring AI 1.1 GA&lt;/h2&gt;
&lt;p&gt;As we progress toward the Spring AI 1.1 General Availability release, the team is focused on three key areas:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Model Context Protocol (MCP)&lt;/strong&gt; - Continued MCP enhancements&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Chat Model Features&lt;/strong&gt; - Expanding prompt caching and thinking/reasoning mode support across model providers&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Chat Memory&lt;/strong&gt; - Addressing community-reported chat memory issues&lt;/p&gt;
&lt;p&gt;For the latest updates and to contribute to the project, visit our &lt;a href=&quot;https://github.com/spring-projects/spring-ai&quot;&gt;GitHub repository&lt;/a&gt; or join the discussion in our community channels.&lt;/p&gt;
&lt;h2 id=&quot;resources&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#resources&quot; aria-label=&quot;resources permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://spring.io/projects/spring-ai/&quot;&gt;Project Page&lt;/a&gt; | &lt;a href=&quot;https://github.com/spring-projects/spring-ai&quot;&gt;GitHub&lt;/a&gt; | &lt;a href=&quot;https://github.com/spring-projects/spring-ai/issues&quot;&gt;Issues&lt;/a&gt; | &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/1.1.0-M3/&quot;&gt;Documentation&lt;/a&gt; | &lt;a href=&quot;https://stackoverflow.com/questions/tagged/spring-ai&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;-contributors&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#-contributors&quot; aria-label=&quot; contributors permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;? Contributors&lt;/h2&gt;
&lt;p&gt;Thanks to all contributors who made this release possible:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/andrei.shakirin&quot;&gt;ashakirin (@andrei.shakirin)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/kirkster96&quot;&gt;Cameron Kirk (@kirkster96)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cho&quot;&gt;cho-thinkfree-com (@cho)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tzolov&quot;&gt;Christian Tzolov (@tzolov)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/imzhouchen&quot;&gt;codeboyzhou (@imzhouchen)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/git&quot;&gt;Daniel Garnier-Moiroux (@git)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dafriz&quot;&gt;David Frizelle (@dafriz)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dmitrii.chechetkin&quot;&gt;Dmitrii Chechetkin (@dmitrii.chechetkin)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/bottarde&quot;&gt;Eric Bottard (@bottarde)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/crad_on25&quot;&gt;Hyoseop Song (@crad_on25)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ilayaperumalg&quot;&gt;Ilayaperumal Gopinathan (@ilayaperumalg)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/james&quot;&gt;James Ward (@james)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jason.huynh&quot;&gt;Jason Huynh (@jason.huynh)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jasonparallel&quot;&gt;Jason Smith (@jasonparallel)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/leehaut&quot;&gt;lance (@leehaut)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/markpollack&quot;&gt;Mark Pollack (@markpollack)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nathangrand&quot;&gt;NathanGrand (@nathangrand)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nils&quot;&gt;Nils Breunese (@nils)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/alexanderklmn&quot;&gt;Oleksandr Klymenko (@alexanderklmn)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/soby.chacko&quot;&gt;Soby Chacko (@soby.chacko)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sunyuhan1998&quot;&gt;Sun Yuhan (@sunyuhan1998)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/theo.van&quot;&gt;Theo van Kraay (@theo.van)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ngocnhan.tran1996&quot;&gt;Tran Ngoc Nhan (@ngocnhan.tran1996)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zhouyanming&quot;&gt;Yanming Zhou (@zhouyanming)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/eeaters&quot;&gt;YuJie Wan (@eeaters)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/luyunkui95&quot;&gt;YunKui Lu (@luyunkui95)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item></channel></rss>